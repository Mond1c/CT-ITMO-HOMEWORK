#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1539-g2693dd32b)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "C:\Users\pocht\scoop\apps\iverilog\current\lib\ivl\system.vpi";
:vpi_module "C:\Users\pocht\scoop\apps\iverilog\current\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\Users\pocht\scoop\apps\iverilog\current\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\Users\pocht\scoop\apps\iverilog\current\lib\ivl\v2005_math.vpi";
:vpi_module "C:\Users\pocht\scoop\apps\iverilog\current\lib\ivl\va_math.vpi";
:vpi_module "C:\Users\pocht\scoop\apps\iverilog\current\lib\ivl\v2009.vpi";
S_000001f16a593d40 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_000001f16a593ed0 .scope package, "utility" "utility" 3 1;
 .timescale 0 0;
P_000001f16a52d1e0 .param/l "ADDR1_BUS_SIZE" 0 3 17, +C4<00000000000000000000000000001110>;
P_000001f16a52d218 .param/l "ADDR2_BUS_SIZE" 0 3 18, +C4<00000000000000000000000000001110>;
P_000001f16a52d250 .param/l "CACHE_ADDR_SIZE" 0 3 12, +C4<00000000000000000000000000010101>;
P_000001f16a52d288 .param/l "CACHE_LINE_COUNT" 0 3 6, +C4<00000000000000000000000010000000>;
P_000001f16a52d2c0 .param/l "CACHE_LINE_SIZE" 0 3 5, +C4<00000000000000000000000010000000>;
P_000001f16a52d2f8 .param/l "CACHE_OFFSET_SIZE" 0 3 11, +C4<00000000000000000000000000000111>;
P_000001f16a52d330 .param/l "CACHE_SETS_COUNT" 0 3 8, +C4<00000000000000000000000001000000>;
P_000001f16a52d368 .param/l "CACHE_SET_SIZE" 0 3 10, +C4<00000000000000000000000000000110>;
P_000001f16a52d3a0 .param/l "CACHE_SIZE" 0 3 4, +C4<00000000000000000100000000000000>;
P_000001f16a52d3d8 .param/l "CACHE_TAG_SIZE" 0 3 9, +C4<00000000000000000000000000001000>;
P_000001f16a52d410 .param/l "CACHE_WAY" 0 3 7, +C4<00000000000000000000000000000010>;
P_000001f16a52d448 .param/l "CTR1_BUS_SIZE" 0 3 19, +C4<00000000000000000000000000000011>;
P_000001f16a52d480 .param/l "CTR2_BUS_SIZE" 0 3 20, +C4<00000000000000000000000000000010>;
P_000001f16a52d4b8 .param/l "DATA1_BUS_SIZE" 0 3 15, +C4<00000000000000000000000000010000>;
P_000001f16a52d4f0 .param/l "DATA2_BUS_SIZE" 0 3 16, +C4<00000000000000000000000000010000>;
P_000001f16a52d528 .param/l "MEM_SIZE" 0 3 3, +C4<00000000001000000000000000000000>;
S_000001f16a5a5320 .scope module, "testbench" "testbench" 4 4;
 .timescale 0 0;
o000001f16a5a5c38 .functor BUFZ 14, C4<zzzzzzzzzzzzzz>; HiZ drive
v000001f16a5f8e00_0 .net "A1", 13 0, o000001f16a5a5c38;  0 drivers
o000001f16a5a5c68 .functor BUFZ 14, C4<zzzzzzzzzzzzzz>; HiZ drive
v000001f16a5f8ea0_0 .net "A2", 13 0, o000001f16a5a5c68;  0 drivers
o000001f16a5a5c98 .functor BUFZ 3, C4<zzz>; HiZ drive
v000001f16a5f99e0_0 .net "C1", 2 0, o000001f16a5a5c98;  0 drivers
o000001f16a5a5cc8 .functor BUFZ 2, C4<zz>; HiZ drive
v000001f16a5f9120_0 .net "C2", 1 0, o000001f16a5a5cc8;  0 drivers
o000001f16a5a5cf8 .functor BUFZ 1, C4<z>; HiZ drive
v000001f16a5f87c0_0 .net "CLK", 0 0, o000001f16a5a5cf8;  0 drivers
o000001f16a5a5d28 .functor BUFZ 16, C4<zzzzzzzzzzzzzzzz>; HiZ drive
v000001f16a5fa520_0 .net "D1", 15 0, o000001f16a5a5d28;  0 drivers
o000001f16a5a5d58 .functor BUFZ 16, C4<zzzzzzzzzzzzzzzz>; HiZ drive
v000001f16a5f8ae0_0 .net "D2", 15 0, o000001f16a5a5d58;  0 drivers
o000001f16a5a5d88 .functor BUFZ 1, C4<z>; HiZ drive
v000001f16a5f9d00_0 .net "RESET", 0 0, o000001f16a5a5d88;  0 drivers
v000001f16a5f8b80_0 .var "address", 20 0;
S_000001f16a5a54b0 .scope module, "c" "cache_cpu" 4 13, 5 4 0, S_000001f16a5a5320;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "CLK";
    .port_info 1 /INPUT 1 "RESET";
    .port_info 2 /INOUT 14 "A1";
    .port_info 3 /INOUT 14 "A2";
    .port_info 4 /INOUT 16 "D1";
    .port_info 5 /INOUT 16 "D2";
    .port_info 6 /INOUT 3 "C1";
    .port_info 7 /INOUT 2 "C2";
v000001f16a59c150_0 .net "A1", 13 0, o000001f16a5a5c38;  alias, 0 drivers
v000001f16a5f9080_0 .net "A2", 13 0, o000001f16a5a5c68;  alias, 0 drivers
v000001f16a5f93a0_0 .net "C1", 2 0, o000001f16a5a5c98;  alias, 0 drivers
v000001f16a5f8720_0 .net "C2", 1 0, o000001f16a5a5cc8;  alias, 0 drivers
v000001f16a5f9a80_0 .net "CLK", 0 0, o000001f16a5a5cf8;  alias, 0 drivers
v000001f16a5f8cc0_0 .net "D1", 15 0, o000001f16a5a5d28;  alias, 0 drivers
v000001f16a5f8d60_0 .net "D2", 15 0, o000001f16a5a5d58;  alias, 0 drivers
v000001f16a5f96c0_0 .net "RESET", 0 0, o000001f16a5a5d88;  alias, 0 drivers
v000001f16a5f9bc0_0 .var/i "SEED", 31 0;
v000001f16a5f9c60_0 .var/darray "data", 1;
v000001f16a5f9f80_0 .var "line", 10 0;
v000001f16a5f9440_0 .var "lines", 1407 0;
S_000001f16a5a5640 .scope function.void, "execute_command_from_CPU" "execute_command_from_CPU" 5 72, 5 72 0, S_000001f16a5a54b0;
 .timescale 0 0;
v000001f16a59c790_0 .var "address", 20 0;
v000001f16a59ba70_0 .var/2s "command", 7 0;
TD_testbench.c.execute_command_from_CPU ;
    %load/vec4 v000001f16a59ba70_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 8;
    %cmp/u;
    %jmp/1 T_0.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 8;
    %cmp/u;
    %jmp/1 T_0.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 8;
    %cmp/u;
    %jmp/1 T_0.2, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 8;
    %cmp/u;
    %jmp/1 T_0.3, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 8;
    %cmp/u;
    %jmp/1 T_0.4, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 8;
    %cmp/u;
    %jmp/1 T_0.5, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 8;
    %cmp/u;
    %jmp/1 T_0.6, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 8;
    %cmp/u;
    %jmp/1 T_0.7, 6;
    %jmp T_0.8;
T_0.0 ;
    %vpi_call/w 5 75 "$display", "C1_NOP" {0 0 0};
    %jmp T_0.8;
T_0.1 ;
    %load/vec4 v000001f16a59c790_0;
    %store/vec4 v000001f16a59bcf0_0, 0, 21;
    %callf/vec4 TD_testbench.c.get_cache_line, S_000001f16a5f7d70;
    %store/vec4 v000001f16a5f9f80_0, 0, 11;
    %load/vec4 v000001f16a5f9f80_0;
    %parti/u 1, 10, 32;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_0.9, 4;
    %vpi_call/w 5 80 "$error", "This cache line is not valid" {0 0 0};
T_0.9 ;
    %load/vec4 v000001f16a5f9f80_0;
    %parti/u 1, 0, 32;
    %pad/u 128;
    %store/vec4 v000001f16a59bc50_0, 0, 128;
    %load/vec4 v000001f16a59c790_0;
    %parti/u 7, 0, 32;
    %pad/u 32;
    %cast2;
    %store/vec4 v000001f16a59bbb0_0, 0, 32;
    %pushi/vec4 8, 0, 32;
    %store/vec4 v000001f16a59b9d0_0, 0, 32;
    %callf/void TD_testbench.c.get_data, S_000001f16a5f7f00;
    %vpi_call/w 5 83 "$display", "%b, %b, %b, ", &PV<v000001f16a5f9f80_0, 10, 1>, &PV<v000001f16a5f9f80_0, 9, 1>, &PV<v000001f16a5f9f80_0, 1, 8> {0 0 0};
    %fork t_1, S_000001f16a5a57d0;
    %jmp t_0;
    .scope S_000001f16a5a57d0;
t_1 ;
    %vpi_func 5 84 "$low" 32, v000001f16a5f9c60_0 {0 0 0};
    %store/vec4 v000001f16a59c510_0, 0, 32;
T_0.11 ;
    %load/vec4 v000001f16a59c510_0;
    %vpi_func 5 84 "$high" 32, v000001f16a5f9c60_0 {0 0 0};
    %cmp/s;
    %flag_or 5, 4;
    %jmp/0xz T_0.12, 5;
    %ix/getv/s 3, v000001f16a59c510_0;
    %load/dar/vec4 v000001f16a5f9c60_0;
    %vpi_call/w 5 85 "$display", "data[%0d] = %0b", v000001f16a59c510_0, S<0,vec4,u1> {1 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001f16a59c510_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001f16a59c510_0, 0, 32;
    %jmp T_0.11;
T_0.12 ;
    %end;
    .scope S_000001f16a5a5640;
t_0 %join;
    %vpi_call/w 5 87 "$display", "C1_READ8" {0 0 0};
    %jmp T_0.8;
T_0.2 ;
    %load/vec4 v000001f16a59c790_0;
    %store/vec4 v000001f16a59bcf0_0, 0, 21;
    %callf/vec4 TD_testbench.c.get_cache_line, S_000001f16a5f7d70;
    %store/vec4 v000001f16a5f9f80_0, 0, 11;
    %load/vec4 v000001f16a5f9f80_0;
    %parti/u 1, 10, 32;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_0.13, 4;
    %vpi_call/w 5 92 "$error", "This cache line is not valid" {0 0 0};
T_0.13 ;
    %load/vec4 v000001f16a5f9f80_0;
    %parti/u 1, 0, 32;
    %pad/u 128;
    %store/vec4 v000001f16a59bc50_0, 0, 128;
    %load/vec4 v000001f16a59c790_0;
    %parti/u 7, 0, 32;
    %pad/u 32;
    %cast2;
    %store/vec4 v000001f16a59bbb0_0, 0, 32;
    %pushi/vec4 16, 0, 32;
    %store/vec4 v000001f16a59b9d0_0, 0, 32;
    %callf/void TD_testbench.c.get_data, S_000001f16a5f7f00;
    %vpi_call/w 5 95 "$display", "%b, %b, %b, ", &PV<v000001f16a5f9f80_0, 10, 1>, &PV<v000001f16a5f9f80_0, 9, 1>, &PV<v000001f16a5f9f80_0, 1, 8> {0 0 0};
    %fork t_3, S_000001f16a5f7a50;
    %jmp t_2;
    .scope S_000001f16a5f7a50;
t_3 ;
    %vpi_func 5 96 "$low" 32, v000001f16a5f9c60_0 {0 0 0};
    %store/vec4 v000001f16a59c6f0_0, 0, 32;
T_0.15 ;
    %load/vec4 v000001f16a59c6f0_0;
    %vpi_func 5 96 "$high" 32, v000001f16a5f9c60_0 {0 0 0};
    %cmp/s;
    %flag_or 5, 4;
    %jmp/0xz T_0.16, 5;
    %ix/getv/s 3, v000001f16a59c6f0_0;
    %load/dar/vec4 v000001f16a5f9c60_0;
    %vpi_call/w 5 97 "$display", "data[%0d] = %0b", v000001f16a59c6f0_0, S<0,vec4,u1> {1 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001f16a59c6f0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001f16a59c6f0_0, 0, 32;
    %jmp T_0.15;
T_0.16 ;
    %end;
    .scope S_000001f16a5a5640;
t_2 %join;
    %vpi_call/w 5 99 "$display", "C1_READ16" {0 0 0};
    %jmp T_0.8;
T_0.3 ;
    %load/vec4 v000001f16a59c790_0;
    %store/vec4 v000001f16a59bcf0_0, 0, 21;
    %callf/vec4 TD_testbench.c.get_cache_line, S_000001f16a5f7d70;
    %store/vec4 v000001f16a5f9f80_0, 0, 11;
    %load/vec4 v000001f16a5f9f80_0;
    %parti/u 1, 10, 32;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_0.17, 4;
    %vpi_call/w 5 104 "$error", "This cache line is not valid" {0 0 0};
T_0.17 ;
    %load/vec4 v000001f16a5f9f80_0;
    %parti/u 1, 0, 32;
    %pad/u 128;
    %store/vec4 v000001f16a59bc50_0, 0, 128;
    %load/vec4 v000001f16a59c790_0;
    %parti/u 7, 0, 32;
    %pad/u 32;
    %cast2;
    %store/vec4 v000001f16a59bbb0_0, 0, 32;
    %pushi/vec4 32, 0, 32;
    %store/vec4 v000001f16a59b9d0_0, 0, 32;
    %callf/void TD_testbench.c.get_data, S_000001f16a5f7f00;
    %vpi_call/w 5 107 "$display", "%b, %b, %b, ", &PV<v000001f16a5f9f80_0, 10, 1>, &PV<v000001f16a5f9f80_0, 9, 1>, &PV<v000001f16a5f9f80_0, 1, 8> {0 0 0};
    %fork t_5, S_000001f16a5f7be0;
    %jmp t_4;
    .scope S_000001f16a5f7be0;
t_5 ;
    %vpi_func 5 108 "$low" 32, v000001f16a5f9c60_0 {0 0 0};
    %store/vec4 v000001f16a59c3d0_0, 0, 32;
T_0.19 ;
    %load/vec4 v000001f16a59c3d0_0;
    %vpi_func 5 108 "$high" 32, v000001f16a5f9c60_0 {0 0 0};
    %cmp/s;
    %flag_or 5, 4;
    %jmp/0xz T_0.20, 5;
    %ix/getv/s 3, v000001f16a59c3d0_0;
    %load/dar/vec4 v000001f16a5f9c60_0;
    %vpi_call/w 5 109 "$display", "data[%0d] = %0b", v000001f16a59c3d0_0, S<0,vec4,u1> {1 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001f16a59c3d0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001f16a59c3d0_0, 0, 32;
    %jmp T_0.19;
T_0.20 ;
    %end;
    .scope S_000001f16a5a5640;
t_4 %join;
    %vpi_call/w 5 111 "$display", "C2_READ32" {0 0 0};
    %jmp T_0.8;
T_0.4 ;
    %load/vec4 v000001f16a59c790_0;
    %store/vec4 v000001f16a59bf70_0, 0, 21;
    %callf/void TD_testbench.c.write_into_cache_line, S_000001f16a5f8540;
    %vpi_call/w 5 115 "$display", "line.data = %b", &PV<v000001f16a5f9f80_0, 0, 1> {0 0 0};
    %vpi_call/w 5 116 "$display", "C1_INVALIDATE_LINE" {0 0 0};
    %jmp T_0.8;
T_0.5 ;
    %vpi_call/w 5 119 "$display", "C1_WRITE8" {0 0 0};
    %jmp T_0.8;
T_0.6 ;
    %vpi_call/w 5 122 "$display", "C1_WRITE16" {0 0 0};
    %jmp T_0.8;
T_0.7 ;
    %vpi_call/w 5 125 "$display", "C1_WRITE32" {0 0 0};
    %jmp T_0.8;
T_0.8 ;
    %pop/vec4 1;
    %end;
S_000001f16a5a57d0 .scope begin, "$ivl_foreach0" "$ivl_foreach0" 5 84, 5 84 0, S_000001f16a5a5640;
 .timescale 0 0;
v000001f16a59c510_0 .var/2s "i", 31 0;
S_000001f16a5f7a50 .scope begin, "$ivl_foreach1" "$ivl_foreach1" 5 96, 5 96 0, S_000001f16a5a5640;
 .timescale 0 0;
v000001f16a59c6f0_0 .var/2s "i", 31 0;
S_000001f16a5f7be0 .scope begin, "$ivl_foreach2" "$ivl_foreach2" 5 108, 5 108 0, S_000001f16a5a5640;
 .timescale 0 0;
v000001f16a59c3d0_0 .var/2s "i", 31 0;
S_000001f16a5f7d70 .scope function.vec4.s11, "get_cache_line" "get_cache_line" 5 34, 5 34 0, S_000001f16a5a54b0;
 .timescale 0 0;
v000001f16a59bcf0_0 .var "address", 20 0;
; Variable get_cache_line is vec4 return value of scope S_000001f16a5f7d70
TD_testbench.c.get_cache_line ;
    %load/vec4 v000001f16a5f9440_0;
    %load/vec4 v000001f16a59bcf0_0;
    %parti/u 6, 7, 32;
    %pad/u 32;
    %muli 2, 0, 32;
    %pad/u 36;
    %muli 11, 0, 36;
    %addi 1, 0, 36;
    %part/u 8;
    %load/vec4 v000001f16a59bcf0_0;
    %parti/u 8, 13, 32;
    %cmp/e;
    %jmp/0xz  T_1.21, 4;
    %load/vec4 v000001f16a5f9440_0;
    %load/vec4 v000001f16a59bcf0_0;
    %parti/u 6, 7, 32;
    %pad/u 32;
    %muli 2, 0, 32;
    %pad/u 36;
    %muli 11, 0, 36;
    %part/u 11;
    %ret/vec4 0, 0, 11;  Assign to get_cache_line (store_vec4_to_lval)
    %disable/flow S_000001f16a5f7d70;
T_1.21 ;
    %load/vec4 v000001f16a5f9440_0;
    %load/vec4 v000001f16a59bcf0_0;
    %parti/u 6, 7, 32;
    %pad/u 32;
    %muli 2, 0, 32;
    %addi 1, 0, 32;
    %pad/u 36;
    %muli 11, 0, 36;
    %addi 1, 0, 36;
    %part/u 8;
    %load/vec4 v000001f16a59bcf0_0;
    %parti/u 8, 13, 32;
    %cmp/e;
    %jmp/0xz  T_1.23, 4;
    %load/vec4 v000001f16a5f9440_0;
    %load/vec4 v000001f16a59bcf0_0;
    %parti/u 6, 7, 32;
    %pad/u 32;
    %muli 2, 0, 32;
    %addi 1, 0, 32;
    %pad/u 36;
    %muli 11, 0, 36;
    %part/u 11;
    %ret/vec4 0, 0, 11;  Assign to get_cache_line (store_vec4_to_lval)
    %disable/flow S_000001f16a5f7d70;
T_1.23 ;
    %vpi_call/w 5 41 "$error", "It's illigal address" {0 0 0};
    %end;
S_000001f16a5f7f00 .scope function.void, "get_data" "get_data" 5 44, 5 44 0, S_000001f16a5a54b0;
 .timescale 0 0;
v000001f16a59bbb0_0 .var/2s "offset", 31 0;
v000001f16a59b9d0_0 .var/2s "size", 31 0;
v000001f16a59bc50_0 .var "source", 127 0;
TD_testbench.c.get_data ;
    %ix/getv/s 4, v000001f16a59b9d0_0;
    %new/darray 4, "b1";
    %store/obj v000001f16a5f9c60_0; ./cache.sv:45: data = new ...
    %fork t_7, S_000001f16a5f8090;
    %jmp t_6;
    .scope S_000001f16a5f8090;
t_7 ;
    %load/vec4 v000001f16a59bbb0_0;
    %store/vec4 v000001f16a59c830_0, 0, 32;
T_2.25 ;
    %load/vec4 v000001f16a59c830_0;
    %load/vec4 v000001f16a59bbb0_0;
    %load/vec4 v000001f16a59b9d0_0;
    %add;
    %cmp/s;
    %jmp/0xz T_2.26, 5;
    %load/vec4 v000001f16a59bc50_0;
    %load/vec4 v000001f16a59c830_0;
    %part/s 1;
    %cast2;
    %load/vec4 v000001f16a59c830_0;
    %load/vec4 v000001f16a59bbb0_0;
    %sub;
    %ix/vec4/s 3;
    %store/dar/vec4 v000001f16a5f9c60_0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001f16a59c830_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001f16a59c830_0, 0, 32;
    %jmp T_2.25;
T_2.26 ;
    %end;
    .scope S_000001f16a5f7f00;
t_6 %join;
    %end;
S_000001f16a5f8090 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 5 46, 5 46 0, S_000001f16a5f7f00;
 .timescale 0 0;
v000001f16a59c830_0 .var/2s "i", 31 0;
S_000001f16a5f8220 .scope function.void, "init" "init" 5 20, 5 20 0, S_000001f16a5a54b0;
 .timescale 0 0;
v000001f16a59be30_0 .var/i "set_number", 31 0;
TD_testbench.c.init ;
    %fork t_9, S_000001f16a5f83b0;
    %jmp t_8;
    .scope S_000001f16a5f83b0;
t_9 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001f16a59bd90_0, 0, 32;
T_3.27 ;
    %load/vec4 v000001f16a59bd90_0;
    %cmpi/s 128, 0, 32;
    %jmp/0xz T_3.28, 5;
    %load/vec4 v000001f16a59be30_0;
    %pushi/vec4 2, 0, 32;
    %mod/s;
    %cmpi/e 0, 0, 32;
    %flag_get/vec4 4;
    %jmp/0 T_3.31, 4;
    %load/vec4 v000001f16a59be30_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_3.31;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.29, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001f16a59be30_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v000001f16a59be30_0, 0, 32;
T_3.29 ;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 10, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v000001f16a5f9f80_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 9, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v000001f16a5f9f80_0, 4, 1;
    %load/vec4 v000001f16a59bd90_0;
    %load/vec4 v000001f16a59be30_0;
    %add;
    %pad/s 8;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v000001f16a5f9f80_0, 4, 8;
    %vpi_func 5 29 "$random" 32, v000001f16a5f9bc0_0 {0 0 0};
    %pad/s 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v000001f16a5f9f80_0, 4, 1;
    %load/vec4 v000001f16a5f9f80_0;
    %load/vec4 v000001f16a59bd90_0;
    %pad/s 36;
    %muli 11, 0, 36;
    %ix/vec4/s 4;
    %store/vec4 v000001f16a5f9440_0, 4, 11;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001f16a59bd90_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v000001f16a59bd90_0, 0, 32;
    %jmp T_3.27;
T_3.28 ;
    %end;
    .scope S_000001f16a5f8220;
t_8 %join;
    %end;
S_000001f16a5f83b0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 5 22, 5 22 0, S_000001f16a5f8220;
 .timescale 0 0;
v000001f16a59bd90_0 .var/i "i", 31 0;
S_000001f16a5f8540 .scope function.void, "write_into_cache_line" "write_into_cache_line" 5 51, 5 51 0, S_000001f16a5a54b0;
 .timescale 0 0;
v000001f16a59bf70_0 .var "address", 20 0;
v000001f16a59c0b0_0 .var/2s "i", 31 0;
TD_testbench.c.write_into_cache_line ;
    %load/vec4 v000001f16a5f9440_0;
    %load/vec4 v000001f16a59c0b0_0;
    %pad/s 36;
    %muli 11, 0, 36;
    %addi 1, 0, 36;
    %part/s 8;
    %load/vec4 v000001f16a59bf70_0;
    %parti/u 8, 13, 32;
    %cmp/e;
    %jmp/0xz  T_4.32, 4;
    %load/vec4 v000001f16a5f9440_0;
    %load/vec4 v000001f16a59c0b0_0;
    %pad/s 36;
    %muli 11, 0, 36;
    %addi 10, 0, 36;
    %part/s 1;
    %ix/load 4, 10, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v000001f16a5f9f80_0, 4, 1;
    %load/vec4 v000001f16a5f9440_0;
    %load/vec4 v000001f16a59c0b0_0;
    %pad/s 36;
    %muli 11, 0, 36;
    %addi 9, 0, 36;
    %part/s 1;
    %ix/load 4, 9, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v000001f16a5f9f80_0, 4, 1;
    %load/vec4 v000001f16a5f9440_0;
    %load/vec4 v000001f16a59c0b0_0;
    %pad/s 36;
    %muli 11, 0, 36;
    %addi 1, 0, 36;
    %part/s 8;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v000001f16a5f9f80_0, 4, 8;
    %vpi_call/w 5 57 "$cast", &PV<v000001f16a5f9f80_0, 0, 1>, v000001f16a5f9c60_0 {0 0 0};
    %load/vec4 v000001f16a5f9f80_0;
    %load/vec4 v000001f16a59c0b0_0;
    %pad/s 36;
    %muli 11, 0, 36;
    %ix/vec4/s 4;
    %store/vec4 v000001f16a5f9440_0, 4, 11;
    %jmp T_4.33;
T_4.32 ;
    %load/vec4 v000001f16a5f9440_0;
    %load/vec4 v000001f16a59c0b0_0;
    %addi 1, 0, 32;
    %pad/s 36;
    %muli 11, 0, 36;
    %addi 1, 0, 36;
    %part/s 8;
    %load/vec4 v000001f16a59bf70_0;
    %parti/u 8, 13, 32;
    %cmp/e;
    %jmp/0xz  T_4.34, 4;
    %load/vec4 v000001f16a5f9440_0;
    %load/vec4 v000001f16a59c0b0_0;
    %addi 1, 0, 32;
    %pad/s 36;
    %muli 11, 0, 36;
    %addi 10, 0, 36;
    %part/s 1;
    %ix/load 4, 10, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v000001f16a5f9f80_0, 4, 1;
    %load/vec4 v000001f16a5f9440_0;
    %load/vec4 v000001f16a59c0b0_0;
    %addi 1, 0, 32;
    %pad/s 36;
    %muli 11, 0, 36;
    %addi 9, 0, 36;
    %part/s 1;
    %ix/load 4, 9, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v000001f16a5f9f80_0, 4, 1;
    %load/vec4 v000001f16a5f9440_0;
    %load/vec4 v000001f16a59c0b0_0;
    %addi 1, 0, 32;
    %pad/s 36;
    %muli 11, 0, 36;
    %addi 1, 0, 36;
    %part/s 8;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v000001f16a5f9f80_0, 4, 8;
    %vpi_call/w 5 64 "$cast", &PV<v000001f16a5f9f80_0, 0, 1>, v000001f16a5f9c60_0 {0 0 0};
    %load/vec4 v000001f16a5f9f80_0;
    %load/vec4 v000001f16a59c0b0_0;
    %addi 1, 0, 32;
    %pad/s 36;
    %muli 11, 0, 36;
    %ix/vec4/s 4;
    %store/vec4 v000001f16a5f9440_0, 4, 11;
    %jmp T_4.35;
T_4.34 ;
    %vpi_call/w 5 68 "$error", "It's illigal address" {0 0 0};
T_4.35 ;
T_4.33 ;
    %end;
    .scope S_000001f16a5f8540;
T_5 ;
    %load/vec4 v000001f16a59bf70_0;
    %parti/u 6, 7, 32;
    %pad/u 32;
    %muli 2, 0, 32;
    %cast2;
    %store/vec4 v000001f16a59c0b0_0, 0, 32;
    %end;
    .thread T_5, $init;
    .scope S_000001f16a5f8220;
T_6 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001f16a59be30_0, 0, 32;
    %end;
    .thread T_6, $init;
    .scope S_000001f16a5a54b0;
T_7 ;
    %pushi/vec4 10000, 0, 32;
    %store/vec4 v000001f16a5f9bc0_0, 0, 32;
    %end;
    .thread T_7, $init;
    .scope S_000001f16a5a5320;
T_8 ;
    %callf/void TD_testbench.c.init, S_000001f16a5f8220;
    %pushi/vec4 0, 0, 6;
    %ix/load 4, 7, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v000001f16a5f8b80_0, 4, 6;
    %pushi/vec4 0, 0, 8;
    %ix/load 4, 13, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v000001f16a5f8b80_0, 4, 8;
    %pushi/vec4 0, 0, 7;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v000001f16a5f8b80_0, 4, 7;
    %pushi/vec4 1, 0, 8;
    %store/vec4 v000001f16a59ba70_0, 0, 8;
    %load/vec4 v000001f16a5f8b80_0;
    %store/vec4 v000001f16a59c790_0, 0, 21;
    %callf/void TD_testbench.c.execute_command_from_CPU, S_000001f16a5a5640;
    %pushi/vec4 0, 0, 6;
    %ix/load 4, 7, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v000001f16a5f8b80_0, 4, 6;
    %pushi/vec4 1, 0, 8;
    %ix/load 4, 13, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v000001f16a5f8b80_0, 4, 8;
    %pushi/vec4 0, 0, 7;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v000001f16a5f8b80_0, 4, 7;
    %pushi/vec4 2, 0, 8;
    %store/vec4 v000001f16a59ba70_0, 0, 8;
    %load/vec4 v000001f16a5f8b80_0;
    %store/vec4 v000001f16a59c790_0, 0, 21;
    %callf/void TD_testbench.c.execute_command_from_CPU, S_000001f16a5a5640;
    %pushi/vec4 4, 0, 8;
    %store/vec4 v000001f16a59ba70_0, 0, 8;
    %load/vec4 v000001f16a5f8b80_0;
    %store/vec4 v000001f16a59c790_0, 0, 21;
    %callf/void TD_testbench.c.execute_command_from_CPU, S_000001f16a5a5640;
    %pushi/vec4 3, 0, 8;
    %store/vec4 v000001f16a59ba70_0, 0, 8;
    %load/vec4 v000001f16a5f8b80_0;
    %store/vec4 v000001f16a59c790_0, 0, 21;
    %callf/void TD_testbench.c.execute_command_from_CPU, S_000001f16a5a5640;
    %end;
    .thread T_8;
# The file index is used to find the file name in the following table.
:file_names 6;
    "N/A";
    "<interactive>";
    "-";
    "./utility.sv";
    ".\testbench.sv";
    "./cache.sv";
